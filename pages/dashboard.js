import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
/*
import logger from "../lib/logger";

*/

import { Button } from '@mui/material';

import { inspect } from 'util';

import Link from 'next/link';
import { useSession, signIn, signOut, getSession } from "next-auth/react"
import { useRouter } from 'next/router'
import React, { useState } from 'react';
import Divider from "@mui/material/Divider";
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';


import prisma from '../lib/prisma.mjs';



function replacer(key, value) {
  if (typeof value === "Date") {
    return value.toString();
  }
  return value;
}

const adminUsernameList = [
  "test1",
  "test2"
];


export async function getServerSideProps(ctx) {
  
  const session = await getSession(ctx);
  console.log(
    `main.getServerSideProps: session: ${JSON.stringify(session)}`
  );

  if(!session){
    return {
      props: {},
    };
  }

  let userName = session.user.name;

  
  let responseList = [];
  let responseInfoList = [];

  if(adminUsernameList.includes(userName)){
    responseList = await prisma.response.findMany({
        /*
        select:{
            name: true,
            email: true,
            createdAt: true,
            updatedAt: true
        },
        */
        orderBy: [
          {
            updatedAt: "desc",
          },
        ],
      });
    
      responseInfoList = JSON.parse(JSON.stringify(responseList, replacer));
  }
  
  return {
    props: {responseInfoList},
  };
}


export default function Dashboard({ responseInfoList }) {

  const { data: session, status } = useSession();
  const router = useRouter();

  //logger.logToDB("main", {message: "test"});

  //const [value1, setValue1] = useState('');
  //const [value2, setValue2] = useState('');



  // status: enum mapping to three possible session states: "loading" | "authenticated" | "unauthenticated"
  if (status == "loading") return <div>loading...</div>;

  if (!session) {
    router.push('/');
    return null;
  }

  console.log(`session: ${JSON.stringify(session)}`);


  return (
    <div className={styles.container}>
      <Head>
        <title>Walk To Joy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>


      <TableContainer component={Paper}>
      <Table sx={{ minWidth: 650 }} aria-label="simple table">
        <TableHead>
          <TableRow>
            <TableCell>Id</TableCell>
            <TableCell align="right">Survey Id</TableCell>
            <TableCell align="right">Survey Name</TableCell>
            <TableCell align="right">Content</TableCell>
            <TableCell align="right">Created At</TableCell>
            <TableCell align="right">Updated At</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {responseInfoList.map((row, index) => (
            <TableRow
              key={index}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell component="th" scope="row">
                {row.id}
              </TableCell>
              <TableCell align="right">{row.surveyId}</TableCell>
              <TableCell align="right">{row.surveyName}</TableCell>
              <TableCell align="right">{row.content}</TableCell>
              <TableCell align="right">{row.createdAt}</TableCell>
              <TableCell align="right">{row.updatedAt}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>


      </main>

      <footer className={styles.main}>
        <div>
          WalkToJoy Study
        </div>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <div>School of Information</div>
          <div>University of Michigan</div>

        </a>
      </footer>
    </div>
  )
}
