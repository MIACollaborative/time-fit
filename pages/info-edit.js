import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";


import TextField from "@mui/material/TextField";
/*
import logger from "../lib/logger";

*/

import { inspect } from "util";

import Link from "next/link";
import { useSession, signIn, signOut, getSession } from "next-auth/react";
import { useRouter } from "next/router";
import React, { useState } from "react";
import Button from '@mui/material/Button';
import Divider from "@mui/material/Divider";
import prisma from "../lib/prisma.mjs";

function replacer(key, value) {
  if (typeof value === "Date") {
    return value.toString();
  }
  return value;
}

export async function getServerSideProps(ctx) {
  const session = await getSession(ctx);
  console.log(`main.getServerSideProps: session: ${JSON.stringify(session)}`);

  if (!session) {
    return {
      props: {},
    };
  }

  let userName = session.user.name;

  const uniqueUser = await prisma.users.findFirst({
    where: { username: userName },
  });

  console.log(`main.getServerSideProps: user: ${JSON.stringify(uniqueUser)}`);

  const userInfo = JSON.parse(JSON.stringify(uniqueUser, replacer));

  return {
    props: { userInfo },
  };
}

export default function InfoEdit({ userInfo }) {
  const { data: session, status } = useSession();
  const router = useRouter();

  const [preferredName, setPreferredName] = useState(
    userInfo.preferredName != undefined ? userInfo.preferredName : ""
  );
  const [phone, setPhone] = useState(
    userInfo.phone != undefined ? userInfo.phone : ""
  );

  // status: enum mapping to three possible session states: "loading" | "authenticated" | "unauthenticated"
  if (status == "loading") return <div>loading...</div>;

  if (!session) {
    router.push("/");
    return null;
  }

  console.log(`session: ${JSON.stringify(session)}`);

  async function updateInfo(
    username,
    info
  ) {
    console.log(`InfoEdit.updateInfo: ${username}`);
    console.log(`InfoEdit.updateInfo.info: ${info}`);

    const result = await fetch(
      "/api/user?function_name=update_info",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({...info, 
          username: username
        }),
      }
    ).then((r) => {
      return r.json();
    });

    return result;
  }

  function onSaveClick(event) {

    updateInfo(
      userInfo.username,
      {
          preferredName,
          phone
      }
    ).then((response) => {
      router.push("/main");
      return response;
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Wawking Hours</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <TextField
            fullWidth
            label="Preferred Name"
            id="fullWidth"
            value={preferredName}
            onChange={(event) => {
                console.log(`setPreferredName: ${event.currentTarget.value}`);
              setPreferredName(event.currentTarget.value);
              
            }}
          />
          <br />
          <Divider />
          <br />
          <TextField
            fullWidth
            label="Phone Number"
            id="fullWidth"
            value={phone}
            onChange={(event) => {
                console.log(`setPhone: ${event.currentTarget.value}`);
              setPhone(event.currentTarget.value);
              
            }}
          />
          <br />
          <br />
          <Button variant="contained" style={{ width: "100%" }} onClick={onSaveClick} >Save</Button>
        </div>
      </main>

      <footer className={styles.main}>
        <div>WalkToJoy Study</div>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <div>School of Informaiton</div>
          <div>University of Michigan</div>
        </a>
      </footer>
    </div>
  );
}
